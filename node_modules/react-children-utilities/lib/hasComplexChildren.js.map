{"version":3,"file":"hasComplexChildren.js","sourceRoot":"","sources":["../src/lib/hasComplexChildren.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,cAAc,EAA2B,MAAM,OAAO,CAAC;AAC1E,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,kBAAkB,GAAG,CACzB,OAAkB,EACkC,EAAE,CACtD,cAAc,CAAC,OAAO,CAAC;IACvB,WAAW,CAAC,OAAO,CAAC;IACpB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAC7C,CAAC,QAAiB,EAAE,KAAgB,EAAW,EAAE,CAAC,QAAQ,IAAI,cAAc,CAAC,KAAK,CAAC,EACnF,KAAK,CACN,CAAC;AAEJ,eAAe,kBAAkB,CAAC","sourcesContent":["import { Children, isValidElement, ReactElement, ReactNode } from 'react';\nimport hasChildren from './hasChildren';\n\nconst hasComplexChildren = (\n  element: ReactNode,\n): element is ReactElement<{ children: ReactNode[] }> =>\n  isValidElement(element) &&\n  hasChildren(element) &&\n  Children.toArray(element.props.children).reduce(\n    (response: boolean, child: ReactNode): boolean => response || isValidElement(child),\n    false,\n  );\n\nexport default hasComplexChildren;\n"]}