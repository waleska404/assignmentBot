{"version":3,"file":"groupByType.js","sourceRoot":"","sources":["../src/lib/groupByType.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAa,MAAM,OAAO,CAAC;AAM5D,MAAM,WAAW,GAAG,CAClB,QAAmB,EACnB,QAA8B,EAAE;AAChC,kEAAkE;AAClE,OAAe,MAAM,EACJ,EAAE;IACnB,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CACtC,CAAC,MAAiC,EAAE,KAAgB,EAAE,EAAE;QACtD,MAAM,SAAS,qBAAQ,MAAM,CAAE,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC;QAEf,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACzF,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;SAClB;QAED,IAAI,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;YACzC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACrB;QAED,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QAE5C,OAAO,SAAS,CAAC;IACnB,CAAC,EACD,EAAE,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import { Children, isValidElement, ReactNode } from 'react';\n\nexport interface GroupedChildren {\n  [name: string]: ReactNode[];\n}\n\nconst groupByType = (\n  children: ReactNode,\n  types: readonly ReactNode[] = [],\n  // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  rest: string = 'rest',\n): GroupedChildren => {\n  return Children.toArray(children).reduce(\n    (groups: Readonly<GroupedChildren>, child: ReactNode) => {\n      const newGroups = { ...groups };\n      let key = rest;\n\n      if (isValidElement(child) && typeof child.type === 'string' && types.includes(child.type)) {\n        key = child.type;\n      }\n\n      if (typeof newGroups[key] === 'undefined') {\n        newGroups[key] = [];\n      }\n\n      newGroups[key] = [...newGroups[key], child];\n\n      return newGroups;\n    },\n    {},\n  );\n};\n\nexport default groupByType;\n"]}